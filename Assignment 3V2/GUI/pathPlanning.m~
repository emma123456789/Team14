% start and end being bp position eg 'A1', 'A2' etc
% must have quotation marks

function [p, toMove] = pathPlanning(start, goal)
    [G, pPlot] = createNodes();
    Gnew = removeNodes(G);
    
    start = char(start);
    goal = char(goal);
    
    startIndex = []; 
    goalIndex = [];
    startIndex = findnode(Gnew, {start});
    goalIndex = findnode(Gnew, {goal});
    startIsObstacle = size(startIndex);
    goalIsObstacle = size(goalIndex);
    
    if (startIsObstacle == 0) && (goalIsObstacle == 0)
        %means start and goal bp is not on an obstacle 
        %hence can get shortest path
        p = shortestpath(Gnew, start, goal); %array of bps
        s = size(p); %gives the size of bps
        
        %checks if there is even a path created. If no path, s = 0
        if s == 0
            fprintf('There is no available path for the robot to move from start to goal.\n')
            % robot should not move at all
            toMove = 0;
        else
            fprintf('Path available... Robot will move now!\n')
            %robot should then move to start bp above the blocks
            %before lowering itself to height = 5mm above table
            highlight(pPlot,p,'EdgeColor','g')
            toMove = 1;
        end
    else
        %means either start/goal is an obstacle
        %and path planning should no longer work
        fprintf('Start/Goal is an obstacle!\n')
        p = [];
        toMove = 2;
    end
    
    

    
end
